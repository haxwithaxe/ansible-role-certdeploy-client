---

- name: Ensure certdeploy is installed with pipx
  community.general.pipx:
    name: certdeploy
    state: install
  environment:
    PIPX_HOME: "{{ certdeploy_client_install_pipx_home }}"
    PIPX_BIN_DIR: "{{ certdeploy_client_install_pipx_bin_dir }}"
    
- name: Merge default certdeploy-client config
  vars:
    __default_config:
      source: "{{ certdeploy_client_config_source }}"
      sftpd:
        server_pubkey: "{{ certdeploy_client_config_sftpd_server_pubkey
          | default(certdeploy_client_server_pubkey) }}"
        privkey_filename: "{{ certdeploy_config_path }}/client_key"
  ansible.builtin.set_fact:
    _config: "{{ __default_config | combine(certdeploy_client_config, recursive=true) }}"

- name: Ensure certdeploy-client specific directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ certdeploy_client_directory_mode }}"
    owner: "{{ certdeploy_client_uid }}"
    group: "{{ certdeploy_client_gid }}"
    recurse: yes
  loop:
    - "{{ certdeploy_client_config_dir }}"
    - "{{ _config.source }}"
    - "{{ _config.destination }}"

# Don't mess with permissions on stuff we don't own
- name: Ensure install directories exists
  ansible.builtin.file:  # noqa: risky-file-permissions
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ certdeploy_client_install_lib_systemd_system }}"
  check_mode: yes

- name: Install certdeploy-client privkey
  ansible.builtin.copy:
    content: "{{ certdeploy_client_privkey }}"
    dest: "{{ _config.sftpd.privkey_filename }}"
    mode: "{{ certdeploy_client_mode }}"
    owner: "{{ certdeploy_uid }}"
    group: "{{ certdeploy_gid }}"
  no_log: yes
  notify: RestartCertdeployClient

- name: Install certdeploy-client config
  ansible.builtin.copy:
    content: "{{ _config | to_nice_yaml }}"
    dest: "{{ certdeploy_client_config_dir }}/client.yml"
    mode: "{{ certdeploy_client_mode }}"
    owner: "{{ certdeploy_client_uid }}"
    group: "{{ certdeploy_client_gid }}"
  notify: RestartCertdeployClient

- name: Install certdeploy-client systemd service file
  ansible.builtin.template:
    src: files/certdeploy-client.service
    dest: "{{ certdeploy_client_install_lib_systemd_system }}/certdeploy-client.service"
    mode: '0644'
    owner: "{{ certdeploy_client_service_file_owner }}"
    group: "{{ certdeploy_client_service_file_group }}"
  notify: RestartCertdeployClient

- name: Ensure service is enabled and restarted
  ansible.builtin.systemd_service:
    name: certdeploy-client.service
    state: started
    enabled: yes
